{"ast":null,"code":"import _slicedToArray from\"C:/Users/ukolala/ElectionCommission/ec1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState } from 'react';\n// import \"./Login.css\";\n// import { Link } from 'react-router-dom';\n// const Login = ({ signupData }) => {\n//  const [username, setUsername] = useState('');\n//  const [password, setPassword] = useState('');\n//  const handleUsernameChange = (e) => {\n//  setUsername(e.target.value);\n//  };\n//  const handlePasswordChange = (e) => {\n//  setPassword(e.target.value);\n//  };\n//  const handleSubmit = (e) => {\n//  e.preventDefault();\n//  // Perform login authentication logic here\n//  // You can use APIs or other authentication mechanisms\n//  const matchedUser = signupData.find((user) => user.username === username && user.password === password);\n//  if (matchedUser) {\n// console.log('Login successful');\n//  // Perform further actions for successful login, such as redirecting to a dashboard or setting authentication state\n//  }\n//  else {\n//  console.log('Invalid username or password');\n//  // Handle error for invalid credentials, such as showing an error message\n// }\n//  // Reset form fields\n//  setUsername('');\n//  setPassword('');\n//  };\n//  return (\n//  <div>\n//  <center>\n//  <h2>Login</h2>\n//   </center>\n//  <form onSubmit={handleSubmit}>\n//  <div>\n//  <center>\n//  <label>Username:</label>\n//  <input type=\"text\" value={username} onChange={handleUsernameChange} required />\n//  </center>\n//  </div>\n//  <div>\n//  <center>\n//  <label>Password:</label>\n//  <input type=\"password\" value={password} onChange={handlePasswordChange} required />\n//  </center>\n//  </div>\n//  <div className=\"ms-3\">\n//  <center>\n//  <Link to=\"/home\"><button type=\"button\" className=\"btn btn-primary mx-5\">Login</button></Link>\n//  <Link to=\"/signup\"><button type=\"button\" className=\"btn btn-success\">Signup</button></Link>\n//  </center>\n//  </div>\n//  </form>\n//  </div>\n//  );\n// };\n// export default Login;\n// import React, { useState } from 'react';\n// import './Login.css';\n// import { Link, useHistory } from 'react-router-dom';\n// const Login = ({ signupData }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const history = useHistory();\n//   const handleUsernameChange = (e) => {\n//     setUsername(e.target.value);\n//   };\n//   const handlePasswordChange = (e) => {\n//     setPassword(e.target.value);\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Perform login authentication logic here\n//     // You can use APIs or other authentication mechanisms\n//     const matchedUser = signupData.find((user) => user.username === username && user.password === password);\n//     if (matchedUser) {\n//       console.log('Login successful');\n//       history.push('/home');\n//       // Perform further actions for successful login, such as redirecting to a dashboard or setting authentication state\n//     } else {\n//       console.log('Invalid username or password');\n//       // Handle error for invalid credentials, such as showing an error message\n//     }\n//     // Reset form fields\n//     // setUsername('');\n//     // setPassword('');\n//   };\n//   const isFormValid = username && password;\n//   return (\n//     <div>\n//       <center>\n//         <h2>Login</h2>\n//       </center>\n//       <form>\n//         <div>\n//           <center>\n//             <label>Username:</label>\n//             <input type=\"text\" value={username} onChange={handleUsernameChange} required />\n//           </center>\n//         </div>\n//         <div>\n//           <center>\n//             <label>Password:</label>\n//             <input type=\"password\" value={password} onChange={handlePasswordChange} required />\n//           </center>\n//         </div>\n//       </form>\n//       <div className=\"ms-3\">\n//           <center>\n//             {isFormValid ? (\n//               <Link to=\"/home\">\n//                 <button onClick={handleSubmit} className=\"btn btn-primary mx-5\">\n//                    Login\n//                 </button>\n//               </Link>\n//             ) : (\n//               <Link to=\"/home\">\n//               <button className=\"btn btn-primary mx-5\" disabled>\n//                 Login\n//               </button>\n//               </Link>\n//             )}\n//             <Link to=\"/signup\">\n//               <button type=\"button\" className=\"btn btn-success\">\n//                 Signup\n//               </button>\n//             </Link>\n//           </center>\n//         </div>\n//     </div>\n//   );\n// };\n// export default Login;\n// login.js\nimport React,{useState,useEffect}from'react';import'./Login.css';import{Link,useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(_ref){var signupData=_ref.signupData;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var history=useHistory();useEffect(function(){setUsername(\"\");setPassword(\"\");},[]);var handleUsernameChange=function handleUsernameChange(e){setUsername(e.target.value);};var handlePasswordChange=function handlePasswordChange(e){setPassword(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();// const matchedUser = signupData.find((user) => user.username === username && user.password === password);\nif(username===\"admin\"&&password===\"admin\"){console.log('Login successful');history.push('/home');}else{console.log('Invalid username or password');}};var isFormValid=username===\"admin\"&&password===\"admin\";// Since we are hardcoding the username and password, the form will always be considered valid.\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"})}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:handleUsernameChange,required:true})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:handlePasswordChange,required:true})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ms-3\",children:/*#__PURE__*/_jsxs(\"center\",{children:[isFormValid?/*#__PURE__*/_jsx(Link,{to:\"/home\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"btn btn-primary mx-5\",children:\"Login\"})}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-5\",disabled:true,children:\"Login\"}),/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-success\",children:\"Signup\"})})]})})]});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","jsx","_jsx","jsxs","_jsxs","Login","_ref","signupData","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","history","handleUsernameChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","console","log","push","isFormValid","children","type","onChange","required","className","to","onClick","disabled"],"sources":["C:/Users/ukolala/ElectionCommission/ec1/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import \"./Login.css\";\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Login = ({ signupData }) => {\r\n\r\n//  const [username, setUsername] = useState('');\r\n//  const [password, setPassword] = useState('');\r\n\r\n//  const handleUsernameChange = (e) => {\r\n\r\n//  setUsername(e.target.value);\r\n\r\n//  };\r\n\r\n//  const handlePasswordChange = (e) => {\r\n\r\n//  setPassword(e.target.value);\r\n\r\n//  };\r\n\r\n//  const handleSubmit = (e) => {\r\n\r\n//  e.preventDefault();\r\n//  // Perform login authentication logic here\r\n\r\n//  // You can use APIs or other authentication mechanisms\r\n\r\n//  const matchedUser = signupData.find((user) => user.username === username && user.password === password);\r\n\r\n//  if (matchedUser) {\r\n\r\n// console.log('Login successful');\r\n\r\n//  // Perform further actions for successful login, such as redirecting to a dashboard or setting authentication state\r\n\r\n//  }\r\n\r\n//  else {\r\n\r\n//  console.log('Invalid username or password');\r\n\r\n//  // Handle error for invalid credentials, such as showing an error message\r\n\r\n// }\r\n//  // Reset form fields\r\n\r\n//  setUsername('');\r\n\r\n//  setPassword('');\r\n\r\n//  };\r\n//  return (\r\n\r\n//  <div>\r\n\r\n//  <center>\r\n\r\n//  <h2>Login</h2>\r\n//   </center>\r\n\r\n//  <form onSubmit={handleSubmit}>\r\n\r\n//  <div>\r\n\r\n//  <center>\r\n\r\n//  <label>Username:</label>\r\n\r\n//  <input type=\"text\" value={username} onChange={handleUsernameChange} required />\r\n\r\n//  </center>\r\n\r\n//  </div>\r\n\r\n//  <div>\r\n\r\n//  <center>\r\n\r\n//  <label>Password:</label>\r\n//  <input type=\"password\" value={password} onChange={handlePasswordChange} required />\r\n//  </center>\r\n\r\n//  </div>\r\n\r\n//  <div className=\"ms-3\">\r\n\r\n//  <center>\r\n\r\n//  <Link to=\"/home\"><button type=\"button\" className=\"btn btn-primary mx-5\">Login</button></Link>\r\n\r\n//  <Link to=\"/signup\"><button type=\"button\" className=\"btn btn-success\">Signup</button></Link>\r\n\r\n//  </center>\r\n\r\n//  </div>\r\n\r\n//  </form>\r\n\r\n//  </div>\r\n\r\n//  );\r\n\r\n// };\r\n\r\n\r\n\r\n\r\n// export default Login;\r\n\r\n// import React, { useState } from 'react';\r\n// import './Login.css';\r\n// import { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\n// const Login = ({ signupData }) => {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const history = useHistory();\r\n\r\n//   const handleUsernameChange = (e) => {\r\n//     setUsername(e.target.value);\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // Perform login authentication logic here\r\n//     // You can use APIs or other authentication mechanisms\r\n//     const matchedUser = signupData.find((user) => user.username === username && user.password === password);\r\n//     if (matchedUser) {\r\n//       console.log('Login successful');\r\n//       history.push('/home');\r\n//       // Perform further actions for successful login, such as redirecting to a dashboard or setting authentication state\r\n//     } else {\r\n//       console.log('Invalid username or password');\r\n//       // Handle error for invalid credentials, such as showing an error message\r\n//     }\r\n//     // Reset form fields\r\n//     // setUsername('');\r\n//     // setPassword('');\r\n//   };\r\n\r\n//   const isFormValid = username && password;\r\n\r\n//   return (\r\n//     <div>\r\n//       <center>\r\n//         <h2>Login</h2>\r\n//       </center>\r\n//       <form>\r\n//         <div>\r\n//           <center>\r\n//             <label>Username:</label>\r\n//             <input type=\"text\" value={username} onChange={handleUsernameChange} required />\r\n//           </center>\r\n//         </div>\r\n//         <div>\r\n//           <center>\r\n//             <label>Password:</label>\r\n//             <input type=\"password\" value={password} onChange={handlePasswordChange} required />\r\n//           </center>\r\n//         </div>\r\n//       </form>\r\n//       <div className=\"ms-3\">\r\n//           <center>\r\n//             {isFormValid ? (\r\n//               <Link to=\"/home\">\r\n//                 <button onClick={handleSubmit} className=\"btn btn-primary mx-5\">\r\n//                    Login\r\n//                 </button>\r\n//               </Link>\r\n//             ) : (\r\n//               <Link to=\"/home\">\r\n//               <button className=\"btn btn-primary mx-5\" disabled>\r\n//                 Login\r\n//               </button>\r\n//               </Link>\r\n//             )}\r\n//             <Link to=\"/signup\">\r\n//               <button type=\"button\" className=\"btn btn-success\">\r\n//                 Signup\r\n//               </button>\r\n//             </Link>\r\n//           </center>\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n// login.js\r\nimport React, { useState,useEffect } from 'react';\r\nimport './Login.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Login = ({ signupData }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  }, []);\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // const matchedUser = signupData.find((user) => user.username === username && user.password === password);\r\n    \r\n    if (username === \"admin\" && password === \"admin\") {\r\n      console.log('Login successful');\r\n      history.push('/home');\r\n    } else {\r\n      console.log('Invalid username or password');\r\n    }\r\n  };\r\n  \r\n  const isFormValid = username === \"admin\" && password === \"admin\"; // Since we are hardcoding the username and password, the form will always be considered valid.\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h2>Login</h2>\r\n      </center>\r\n      <form>\r\n        <div>\r\n          <center>\r\n            <label>Username:</label>\r\n            <input type=\"text\" value={username} onChange={handleUsernameChange} required />\r\n          </center>\r\n        </div>\r\n        <div>\r\n          <center>\r\n            <label>Password:</label>\r\n            <input type=\"password\" value={password} onChange={handlePasswordChange} required />\r\n          </center>\r\n        </div>\r\n      </form>\r\n      <div className=\"ms-3\">\r\n          <center>\r\n            {isFormValid ? (\r\n              <Link to=\"/home\">\r\n                <button onClick={handleSubmit} className=\"btn btn-primary mx-5\">\r\n                   Login\r\n                </button>\r\n              </Link>\r\n            ) : (\r\n              <button className=\"btn btn-primary mx-5\" disabled>\r\n                Login\r\n              </button>\r\n            )}\r\n            <Link to=\"/signup\">\r\n              <button type=\"button\" className=\"btn btn-success\">\r\n                Signup\r\n              </button>\r\n            </Link>\r\n          </center>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}