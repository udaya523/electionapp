{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ukolala\\\\ElectionCommission\\\\ec1\\\\src\\\\components\\\\Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const [showTable, setShowTable] = useState(false);\n  const jsonData = [{\n    sno: 2203,\n    cname: \"MKRISHNAPPA\",\n    pname: \"BharatiyaJanataParty\",\n    evmvotes: 195564,\n    postalvotes: 656,\n    totvotes: 196220,\n    percentofvotes: 51.35,\n    constname: \"BangaloreSouth\",\n    constkey: 176\n  }\n  // Add more data rows here...\n  ];\n\n  const handleButtonClick = () => {\n    setShowTable(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark\",\n      style: {\n        width: '50%',\n        whiteSpace: 'nowrap',\n        background: 'pink',\n        color: 'black'\n      },\n      onClick: handleButtonClick,\n      children: \"Display Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), showTable && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Candidate Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Party Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EVM Votes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Postal Votes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Votes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Percentage of Votes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Constituency Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Constituency Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jsonData.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.sno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.cname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.pname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.evmvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.postalvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.totvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.percentofvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.constname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.constkey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, data.sno, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Reports, \"4pNb5yvTr8x/ykbdkkPHS33mgIs=\");\n_c = Reports;\nexport default Reports;\n\n// // import React from \"react\";\n// // import { Link } from 'react-router-dom';\n\n// // const Reports = () => {\n// //     return(\n// //         <>\n// //         <Link to=\"/home\">\n// //             <button className=\"btn btn-success mx-2\">\n// //                 Back\n// //             </button>\n// //         </Link>\n// //         <center>\n// //          <h2>Reports</h2>\n// //          <div >\n// //             {/* <button className=\"btn btn-dark\" style={{ width: '100%', whiteSpace: 'nowrap',background: 'pink' }}>\n// //                 Top-5 Candidates won with the highest margin in their Constituency\n// //             </button> */}\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap', background: 'pink', color: 'black' }}>\n// //   Top-5 Candidates won with the highest margin in their Constituency\n// // </button>\n\n// //             <br/>\n// //             <br/>\n// //             {/* <button className=\"btn btn-dark\" style={{ width: '100%', whiteSpace: 'nowrap' }}>\n// //                 Top-5 Candidates with highest votes \n// //             </button>\n// //             <br/> */}\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap', backgroundColor: 'pink',color: 'black' }}>\n// //   Top-5 Candidates with highest votes\n// // </button>\n\n// //             <br/>\n// //             <br />\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap' ,backgroundColor: 'pink',color: 'black'}}>\n// //                 Candidate contesting in more than one constituency\n// //             </button>\n// //             <br/>\n// //             <br/>\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap',backgroundColor: 'pink',color: 'black' }}>\n// //                 Top-5 Constituency with highest NOTA votes\n// //             </button>\n// //             <br/>\n// //             <br/>\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap' ,background: 'pink',color: 'black'}}>\n// //                 Constituency won with margin Ranges\n// //             </button>\n// //          </div>\n// //         </center>\n// //         </>\n// //     )\n// // }\n// // export default Reports;\n\n// import React, { useState } from \"react\";\n// import { Link } from 'react-router-dom';\n\n// const Reports = () => {\n//   const [jsonData, setJsonData] = useState(null); // State to store the JSON data\n\n//   const tableStyle = {\n//     borderCollapse: 'collapse',\n//     width: '100%',\n//   };\n\n//   const tableHeaderStyle = {\n//     border: '1px solid black',\n//     padding: '8px',\n//     backgroundColor: '#f2f2f2',\n//     textAlign: 'center',\n//   };\n\n//   const tableCellStyle = {\n//     border: '1px solid black',\n//     padding: '8px',\n//     textAlign: 'center',\n//   };\n\n//   // ...\n\n//   <table style={tableStyle}>\n//     <thead>\n//       <tr>\n//         <th style={tableHeaderStyle}>Sno</th>\n//         <th style={tableHeaderStyle}>Candidate Name</th>\n//         <th style={tableHeaderStyle}>Party Name</th>\n//         <th style={tableHeaderStyle}>EVM Votes</th>\n//         <th style={tableHeaderStyle}>Postal Votes</th>\n//         <th style={tableHeaderStyle}>Total Votes</th>\n//         <th style={tableHeaderStyle}>Percentage of Votes</th>\n//         <th style={tableHeaderStyle}>Constituency Name</th>\n//         <th style={tableHeaderStyle}>Constituency Key</th>\n//       </tr>\n//     </thead>\n//     <tbody>\n//       {/* Iterate over the JSON data and generate table rows */}\n//       {jsonData.map((data) => (\n//         <tr key={data.sno}>\n//           <td style={tableCellStyle}>{data.sno}</td>\n//           <td style={tableCellStyle}>{data.cname}</td>\n//           <td style={tableCellStyle}>{data.pname}</td>\n//           <td style={tableCellStyle}>{data.evmvotes}</td>\n//           <td style={tableCellStyle}>{data.postalvotes}</td>\n//           <td style={tableCellStyle}>{data.totvotes}</td>\n//           <td style={tableCellStyle}>{data.percentofvotes}</td>\n//           <td style={tableCellStyle}>{data.constname}</td>\n//           <td style={tableCellStyle}>{data.constkey}</td>\n//         </tr>\n//       ))}\n//     </tbody>\n//   </table>\n\n//   const fetchJsonData = () => {\n//     // Simulating an API call to fetch the JSON data\n//     const data = [\n//       {\n//         \"sno\": 2203,\n//         \"cname\": \"M KRISHNAPPA\",\n//         \"pname\": \"Bharatiya Janata Party\",\n//         \"evmvotes\": 195564,\n//         \"postalvotes\": 656,\n//         \"totvotes\": 196220,\n//         \"percentofvotes\": 51.35,\n//         \"constname\": \"Bangalore South\",\n//         \"constkey\": 176\n//       },\n//       {\n//         \"sno\": 2173,\n//         \"cname\": \"MANJULA S\",\n//         \"pname\": \"Bharatiya Janata Party\",\n//         \"evmvotes\": 181268,\n//         \"postalvotes\": 463,\n//         \"totvotes\": 181731,\n//         \"percentofvotes\": 54.31,\n//         \"constname\": \"Mahadevapura\",\n//         \"constkey\": 174\n//       },\n//       {\n//         \"sno\": 1867,\n//         \"cname\": \"S.T.SOMASHEKAR\",\n//         \"pname\": \"Bharatiya Janata Party\",\n//         \"evmvotes\": 168485,\n//         \"postalvotes\": 664,\n//         \"totvotes\": 169149,\n//         \"percentofvotes\": 47.26,\n//         \"constname\": \"Yeshvanthapura\",\n//         \"constkey\": 153\n//       },\n//       {\n//         \"sno\": 1845,\n//         \"cname\": \"KRISHNA BYREGOWDA\",\n//         \"pname\": \"Indian National Congress\",\n//         \"evmvotes\": 159781,\n//         \"postalvotes\": 401,\n//         \"totvotes\": 160182,\n//         \"percentofvotes\": 54.43,\n//         \"constname\": \"Byatarayanapura\",\n//         \"constkey\": 152\n//       },\n//       {\n//         \"sno\": 1864,\n//         \"cname\": \"T.N.JAVARAYI GOWDA\",\n//         \"pname\": \"Janata Dal  (Secular)\",\n//         \"evmvotes\": 153557,\n//         \"postalvotes\": 474,\n//         \"totvotes\": 154031,\n//         \"percentofvotes\": 43.04,\n//         \"constname\": \"Yeshvanthapura\",\n//         \"constkey\": 153\n//       }\n//     ];\n\n//     setJsonData(data); // Update the state with the fetched JSON data\n//   };\n\n//   return (\n//     <>\n//       <Link to=\"/home\">\n//         <button className=\"btn btn-success mx-2\">Back</button>\n//       </Link>\n//       <center>\n//         <h2>Reports</h2>\n//         <div>\n//           <button\n//             className=\"btn btn-dark\"\n//             style={{\n//               width: '50%',\n//               whiteSpace: 'nowrap',\n//               background: 'pink',\n//               color: 'black'\n//             }}\n//             onClick={fetchJsonData} // Call fetchJsonData when the button is clicked\n//           >\n//             Top-5 Candidates with highest votes\n//           </button>\n\n//           <br />\n//           <br />\n\n//           {jsonData && ( // Show the table when jsonData is not null\n\n//           // ...\n\n//           <table style={tableStyle}>\n//             <thead>\n//               <tr>\n//                 <th style={tableHeaderStyle}>Sno</th>\n//                 <th style={tableHeaderStyle}>Candidate Name</th>\n//                 <th style={tableHeaderStyle}>Party Name</th>\n//                 <th style={tableHeaderStyle}>EVM Votes</th>\n//                 <th style={tableHeaderStyle}>Postal Votes</th>\n//                 <th style={tableHeaderStyle}>Total Votes</th>\n//                 <th style={tableHeaderStyle}>Percentage of Votes</th>\n//                 <th style={tableHeaderStyle}>Constituency Name</th>\n//                 <th style={tableHeaderStyle}>Constituency Key</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {/* Iterate over the JSON data and generate table rows */}\n//               {jsonData.map((data) => (\n//                 <tr key={data.sno}>\n//                   <td style={tableCellStyle}>{data.sno}</td>\n//                   <td style={tableCellStyle}>{data.cname}</td>\n//                   <td style={tableCellStyle}>{data.pname}</td>\n//                   <td style={tableCellStyle}>{data.evmvotes}</td>\n//                   <td style={tableCellStyle}>{data.postalvotes}</td>\n//                   <td style={tableCellStyle}>{data.totvotes}</td>\n//                   <td style={tableCellStyle}>{data.percentofvotes}</td>\n//                   <td style={tableCellStyle}>{data.constname}</td>\n//                   <td style={tableCellStyle}>{data.constkey}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n\n//             // <table>\n//             //   <thead>\n//             //     <tr>\n//             //       <th>Sno</th>\n//             //       <th>Candidate Name</th>\n//             //       <th>Party Name</th>\n//             //       <th>EVM Votes</th>\n//             //       <th>Postal Votes</th>\n//             //       <th>Total Votes</th>\n//             //       <th>Percentage of Votes</th>\n//             //       <th>Constituency Name</th>\n//             //       <th>Constituency Key</th>\n//             //     </tr>\n//             //   </thead>\n//             //   <tbody>\n//             //     {/* Iterate over the JSON data and generate table rows */}\n//             //     {jsonData.map((data) => (\n//             //       <tr key={data.sno}>\n//             //         <td>{data.sno}</td>\n//             //         <td>{data.cname}</td>\n//             //         <td>{data.pname}</td>\n//             //         <td>{data.evmvotes}</td>\n//             //         <td>{data.postalvotes}</td>\n//             //         <td>{data.totvotes}</td>\n//             //         <td>{data.percentofvotes}</td>\n//             //         <td>{data.constname}</td>\n//             //         <td>{data.constkey}</td>\n//             //       </tr>\n//             //     ))}\n//             //   </tbody>\n//             // </table>\n//           )}\n\n//         </div>\n//       </center>\n//     </>\n//   );\n// };\n\n// export default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Reports","_s","showTable","setShowTable","jsonData","sno","cname","pname","evmvotes","postalvotes","totvotes","percentofvotes","constname","constkey","handleButtonClick","children","className","style","width","whiteSpace","background","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","data","_c","$RefreshReg$"],"sources":["C:/Users/ukolala/ElectionCommission/ec1/src/components/Reports.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Reports = () => {\r\n  const [showTable, setShowTable] = useState(false);\r\n\r\n  const jsonData = [\r\n    {\r\n      sno: 2203,\r\n      cname: \"MKRISHNAPPA\",\r\n      pname: \"BharatiyaJanataParty\",\r\n      evmvotes: 195564,\r\n      postalvotes: 656,\r\n      totvotes: 196220,\r\n      percentofvotes: 51.35,\r\n      constname: \"BangaloreSouth\",\r\n      constkey: 176,\r\n    },\r\n    // Add more data rows here...\r\n  ];\r\n\r\n  const handleButtonClick = () => {\r\n    setShowTable(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn btn-dark\"\r\n        style={{\r\n          width: '50%',\r\n          whiteSpace: 'nowrap',\r\n          background: 'pink',\r\n          color: 'black',\r\n        }}\r\n        onClick={handleButtonClick}\r\n      >\r\n        Display Table\r\n      </button>\r\n\r\n      {showTable && (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Sno</th>\r\n              <th>Candidate Name</th>\r\n              <th>Party Name</th>\r\n              <th>EVM Votes</th>\r\n              <th>Postal Votes</th>\r\n              <th>Total Votes</th>\r\n              <th>Percentage of Votes</th>\r\n              <th>Constituency Name</th>\r\n              <th>Constituency Key</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {jsonData.map((data) => (\r\n              <tr key={data.sno}>\r\n                <td>{data.sno}</td>\r\n                <td>{data.cname}</td>\r\n                <td>{data.pname}</td>\r\n                <td>{data.evmvotes}</td>\r\n                <td>{data.postalvotes}</td>\r\n                <td>{data.totvotes}</td>\r\n                <td>{data.percentofvotes}</td>\r\n                <td>{data.constname}</td>\r\n                <td>{data.constkey}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n\r\n// // import React from \"react\";\r\n// // import { Link } from 'react-router-dom';\r\n\r\n// // const Reports = () => {\r\n// //     return(\r\n// //         <>\r\n// //         <Link to=\"/home\">\r\n// //             <button className=\"btn btn-success mx-2\">\r\n// //                 Back\r\n// //             </button>\r\n// //         </Link>\r\n// //         <center>\r\n// //          <h2>Reports</h2>\r\n// //          <div >\r\n// //             {/* <button className=\"btn btn-dark\" style={{ width: '100%', whiteSpace: 'nowrap',background: 'pink' }}>\r\n// //                 Top-5 Candidates won with the highest margin in their Constituency\r\n// //             </button> */}\r\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap', background: 'pink', color: 'black' }}>\r\n// //   Top-5 Candidates won with the highest margin in their Constituency\r\n// // </button>\r\n\r\n// //             <br/>\r\n// //             <br/>\r\n// //             {/* <button className=\"btn btn-dark\" style={{ width: '100%', whiteSpace: 'nowrap' }}>\r\n// //                 Top-5 Candidates with highest votes \r\n// //             </button>\r\n// //             <br/> */}\r\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap', backgroundColor: 'pink',color: 'black' }}>\r\n// //   Top-5 Candidates with highest votes\r\n// // </button>\r\n\r\n// //             <br/>\r\n// //             <br />\r\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap' ,backgroundColor: 'pink',color: 'black'}}>\r\n// //                 Candidate contesting in more than one constituency\r\n// //             </button>\r\n// //             <br/>\r\n// //             <br/>\r\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap',backgroundColor: 'pink',color: 'black' }}>\r\n// //                 Top-5 Constituency with highest NOTA votes\r\n// //             </button>\r\n// //             <br/>\r\n// //             <br/>\r\n// //             <button className=\"btn btn-dark\" style={{ width: '50%', whiteSpace: 'nowrap' ,background: 'pink',color: 'black'}}>\r\n// //                 Constituency won with margin Ranges\r\n// //             </button>\r\n// //          </div>\r\n// //         </center>\r\n// //         </>\r\n// //     )\r\n// // }\r\n// // export default Reports;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Reports = () => {\r\n//   const [jsonData, setJsonData] = useState(null); // State to store the JSON data\r\n\r\n//   const tableStyle = {\r\n//     borderCollapse: 'collapse',\r\n//     width: '100%',\r\n//   };\r\n  \r\n//   const tableHeaderStyle = {\r\n//     border: '1px solid black',\r\n//     padding: '8px',\r\n//     backgroundColor: '#f2f2f2',\r\n//     textAlign: 'center',\r\n//   };\r\n  \r\n//   const tableCellStyle = {\r\n//     border: '1px solid black',\r\n//     padding: '8px',\r\n//     textAlign: 'center',\r\n//   };\r\n  \r\n//   // ...\r\n  \r\n//   <table style={tableStyle}>\r\n//     <thead>\r\n//       <tr>\r\n//         <th style={tableHeaderStyle}>Sno</th>\r\n//         <th style={tableHeaderStyle}>Candidate Name</th>\r\n//         <th style={tableHeaderStyle}>Party Name</th>\r\n//         <th style={tableHeaderStyle}>EVM Votes</th>\r\n//         <th style={tableHeaderStyle}>Postal Votes</th>\r\n//         <th style={tableHeaderStyle}>Total Votes</th>\r\n//         <th style={tableHeaderStyle}>Percentage of Votes</th>\r\n//         <th style={tableHeaderStyle}>Constituency Name</th>\r\n//         <th style={tableHeaderStyle}>Constituency Key</th>\r\n//       </tr>\r\n//     </thead>\r\n//     <tbody>\r\n//       {/* Iterate over the JSON data and generate table rows */}\r\n//       {jsonData.map((data) => (\r\n//         <tr key={data.sno}>\r\n//           <td style={tableCellStyle}>{data.sno}</td>\r\n//           <td style={tableCellStyle}>{data.cname}</td>\r\n//           <td style={tableCellStyle}>{data.pname}</td>\r\n//           <td style={tableCellStyle}>{data.evmvotes}</td>\r\n//           <td style={tableCellStyle}>{data.postalvotes}</td>\r\n//           <td style={tableCellStyle}>{data.totvotes}</td>\r\n//           <td style={tableCellStyle}>{data.percentofvotes}</td>\r\n//           <td style={tableCellStyle}>{data.constname}</td>\r\n//           <td style={tableCellStyle}>{data.constkey}</td>\r\n//         </tr>\r\n//       ))}\r\n//     </tbody>\r\n//   </table>\r\n  \r\n  \r\n\r\n//   const fetchJsonData = () => {\r\n//     // Simulating an API call to fetch the JSON data\r\n//     const data = [\r\n//       {\r\n//         \"sno\": 2203,\r\n//         \"cname\": \"M KRISHNAPPA\",\r\n//         \"pname\": \"Bharatiya Janata Party\",\r\n//         \"evmvotes\": 195564,\r\n//         \"postalvotes\": 656,\r\n//         \"totvotes\": 196220,\r\n//         \"percentofvotes\": 51.35,\r\n//         \"constname\": \"Bangalore South\",\r\n//         \"constkey\": 176\r\n//       },\r\n//       {\r\n//         \"sno\": 2173,\r\n//         \"cname\": \"MANJULA S\",\r\n//         \"pname\": \"Bharatiya Janata Party\",\r\n//         \"evmvotes\": 181268,\r\n//         \"postalvotes\": 463,\r\n//         \"totvotes\": 181731,\r\n//         \"percentofvotes\": 54.31,\r\n//         \"constname\": \"Mahadevapura\",\r\n//         \"constkey\": 174\r\n//       },\r\n//       {\r\n//         \"sno\": 1867,\r\n//         \"cname\": \"S.T.SOMASHEKAR\",\r\n//         \"pname\": \"Bharatiya Janata Party\",\r\n//         \"evmvotes\": 168485,\r\n//         \"postalvotes\": 664,\r\n//         \"totvotes\": 169149,\r\n//         \"percentofvotes\": 47.26,\r\n//         \"constname\": \"Yeshvanthapura\",\r\n//         \"constkey\": 153\r\n//       },\r\n//       {\r\n//         \"sno\": 1845,\r\n//         \"cname\": \"KRISHNA BYREGOWDA\",\r\n//         \"pname\": \"Indian National Congress\",\r\n//         \"evmvotes\": 159781,\r\n//         \"postalvotes\": 401,\r\n//         \"totvotes\": 160182,\r\n//         \"percentofvotes\": 54.43,\r\n//         \"constname\": \"Byatarayanapura\",\r\n//         \"constkey\": 152\r\n//       },\r\n//       {\r\n//         \"sno\": 1864,\r\n//         \"cname\": \"T.N.JAVARAYI GOWDA\",\r\n//         \"pname\": \"Janata Dal  (Secular)\",\r\n//         \"evmvotes\": 153557,\r\n//         \"postalvotes\": 474,\r\n//         \"totvotes\": 154031,\r\n//         \"percentofvotes\": 43.04,\r\n//         \"constname\": \"Yeshvanthapura\",\r\n//         \"constkey\": 153\r\n//       }\r\n//     ];\r\n\r\n//     setJsonData(data); // Update the state with the fetched JSON data\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link to=\"/home\">\r\n//         <button className=\"btn btn-success mx-2\">Back</button>\r\n//       </Link>\r\n//       <center>\r\n//         <h2>Reports</h2>\r\n//         <div>\r\n//           <button\r\n//             className=\"btn btn-dark\"\r\n//             style={{\r\n//               width: '50%',\r\n//               whiteSpace: 'nowrap',\r\n//               background: 'pink',\r\n//               color: 'black'\r\n//             }}\r\n//             onClick={fetchJsonData} // Call fetchJsonData when the button is clicked\r\n//           >\r\n//             Top-5 Candidates with highest votes\r\n//           </button>\r\n\r\n//           <br />\r\n//           <br />\r\n\r\n//           {jsonData && ( // Show the table when jsonData is not null\r\n          \r\n          \r\n//           // ...\r\n          \r\n//           <table style={tableStyle}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={tableHeaderStyle}>Sno</th>\r\n//                 <th style={tableHeaderStyle}>Candidate Name</th>\r\n//                 <th style={tableHeaderStyle}>Party Name</th>\r\n//                 <th style={tableHeaderStyle}>EVM Votes</th>\r\n//                 <th style={tableHeaderStyle}>Postal Votes</th>\r\n//                 <th style={tableHeaderStyle}>Total Votes</th>\r\n//                 <th style={tableHeaderStyle}>Percentage of Votes</th>\r\n//                 <th style={tableHeaderStyle}>Constituency Name</th>\r\n//                 <th style={tableHeaderStyle}>Constituency Key</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {/* Iterate over the JSON data and generate table rows */}\r\n//               {jsonData.map((data) => (\r\n//                 <tr key={data.sno}>\r\n//                   <td style={tableCellStyle}>{data.sno}</td>\r\n//                   <td style={tableCellStyle}>{data.cname}</td>\r\n//                   <td style={tableCellStyle}>{data.pname}</td>\r\n//                   <td style={tableCellStyle}>{data.evmvotes}</td>\r\n//                   <td style={tableCellStyle}>{data.postalvotes}</td>\r\n//                   <td style={tableCellStyle}>{data.totvotes}</td>\r\n//                   <td style={tableCellStyle}>{data.percentofvotes}</td>\r\n//                   <td style={tableCellStyle}>{data.constname}</td>\r\n//                   <td style={tableCellStyle}>{data.constkey}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n          \r\n//             // <table>\r\n//             //   <thead>\r\n//             //     <tr>\r\n//             //       <th>Sno</th>\r\n//             //       <th>Candidate Name</th>\r\n//             //       <th>Party Name</th>\r\n//             //       <th>EVM Votes</th>\r\n//             //       <th>Postal Votes</th>\r\n//             //       <th>Total Votes</th>\r\n//             //       <th>Percentage of Votes</th>\r\n//             //       <th>Constituency Name</th>\r\n//             //       <th>Constituency Key</th>\r\n//             //     </tr>\r\n//             //   </thead>\r\n//             //   <tbody>\r\n//             //     {/* Iterate over the JSON data and generate table rows */}\r\n//             //     {jsonData.map((data) => (\r\n//             //       <tr key={data.sno}>\r\n//             //         <td>{data.sno}</td>\r\n//             //         <td>{data.cname}</td>\r\n//             //         <td>{data.pname}</td>\r\n//             //         <td>{data.evmvotes}</td>\r\n//             //         <td>{data.postalvotes}</td>\r\n//             //         <td>{data.totvotes}</td>\r\n//             //         <td>{data.percentofvotes}</td>\r\n//             //         <td>{data.constname}</td>\r\n//             //         <td>{data.constkey}</td>\r\n//             //       </tr>\r\n//             //     ))}\r\n//             //   </tbody>\r\n//             // </table>\r\n//           )}\r\n\r\n//         </div>\r\n//       </center>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Reports;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}